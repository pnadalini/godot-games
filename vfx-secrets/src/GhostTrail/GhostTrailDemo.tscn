[gd_scene load_steps=4 format=2]

[ext_resource path="res://src/GhostTrail/AnimatedGhostTrail.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends KinematicBody2D

const FLOOR_NORMAL := Vector2.UP
const SNAP_DIRECTION := Vector2.DOWN
const SNAP_LENGTH := 32.0
const SLOPE_LIMIT := deg2rad(45.0)

export(float) var speed := 500.0
export(float) var gravity := 2000.0
export(float) var jump_strength := 800.0

var direction := Vector2.ZERO
var velocity := Vector2.ZERO
var snap_vector := SNAP_DIRECTION * SNAP_LENGTH

onready var sprite := $Sprite

func _physics_process(delta:float) -> void:
	_move(delta)
	_animate()


func _unhandled_input(event: InputEvent) -> void:
	_handle_input(event)


func _animate() -> void:
	var animation := \"idle\"
	if not is_on_floor():
		if velocity.y >= 0.0:
			animation = \"land\"
		elif velocity.y < 0.0:
			animation = \"jump\"
	else:
		if velocity.x != 0.0:
			animation = \"walk\"
		else:
			animation = \"idle\"


func _handle_input(event: InputEvent) -> void:
	if event.is_action(\"ui_left\") or event.is_action(\"ui_right\"):
		_update_direction()
	if event.is_action_pressed(\"ui_up\"):
		_jump()
	elif event.is_action_released(\"ui_up\"):
		_cancel_jump()


func _move(delta: float) -> void:
	velocity.y += gravity * delta
	velocity.y = move_and_slide_with_snap(velocity, snap_vector, FLOOR_NORMAL).y
	if is_on_floor():
		snap_vector = SNAP_DIRECTION * SNAP_LENGTH
		sprite.is_emitting = false


func _jump() -> void:
	if is_on_floor():
		snap_vector = Vector2.ZERO
		velocity.y = -jump_strength
		sprite.is_emitting = true


func _cancel_jump() -> void:
	if not is_on_floor() and velocity.y < 0.0:
		velocity.y = 0.0


func _update_direction() -> void:
	direction.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\") 
	velocity.x = direction.x * speed
	if not velocity.x == 0:
		sprite.flip_h = velocity.x < 0
"

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 26.5, 46 )

[node name="GhostTrailDemo" type="Node2D"]

[node name="Player" type="KinematicBody2D" parent="."]
position = Vector2( 100, 80 )
script = SubResource( 2 )

[node name="Sprite" parent="Player" instance=ExtResource( 1 )]
position = Vector2( 0, -0.793701 )
is_emitting = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
position = Vector2( 0, -0.793701 )
shape = SubResource( 1 )

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="StaticBody2D"]
polygon = PoolVector2Array( 0, 448, 448, 448, 448, 616, 0, 616 )

[node name="Polygon2D" type="Polygon2D" parent="StaticBody2D/CollisionPolygon2D"]
color = Color( 0.0620117, 0.27227, 0.496094, 1 )
polygon = PoolVector2Array( 0, 448, 448, 448, 448, 616, 0, 616 )

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="StaticBody2D"]
position = Vector2( 640, 0 )
polygon = PoolVector2Array( 0, 448, 384, 448, 384, 616, 0, 616 )

[node name="Polygon2D" type="Polygon2D" parent="StaticBody2D/CollisionPolygon2D2"]
color = Color( 0.0620117, 0.27227, 0.496094, 1 )
polygon = PoolVector2Array( 0, 448, 384, 448, 384, 616, 0, 616 )
